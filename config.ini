[SETUP]
  output = ./output

  # possible datasets: karate can_96 netscience powergrid facebook twitter_gephi
  datasets = karate
  # possible methods: AROPE AROPE_tSNE CNE CNE_tSNE DEEPWALK DEEPWALK_tSNE FR FR_RTX GCN_AE GCN_AE_tSNE DRGRAPH
  methods = AROPE AROPE_tSNE CNE CNE_tSNE DEEPWALK DEEPWALK_tSNE FR FR_RTX GCN_AE GCN_AE_tSNE DRGRAPH
  repetitions = 1
  dimensions = 2
  # possible measures: 1n_preservation 2n_preservation stress glam
  # (glam includes crosslessness edge_length_cv min_angle shape_gabriel)
  metrics = 1n_preservation 2n_preservation stress
  visualize = True

  # load embeddings to recompute measures or visualizations
  #load_embeddings = output/embeddings


# Datasets
[karate]
  file = data/karate.txt
  delimiter = ','
  graph_dist_file = data/karate_graph_distances.txt

[can_96]
  file = data/can_96.txt
  delimiter = ','
  graph_dist_file = data/can_96_graph_distances.txt

[netscience]
  file = data/netscience.txt
  delimiter = ','
  graph_dist_file = data/netscience_graph_distances.txt

[facebook]
  file = data/facebook.txt
  delimiter = ','
  graph_dist_file = data/facebook_graph_distances.txt

[powergrid]
  file = data/powergrid.txt
  delimiter = ','
  graph_dist_file = data/powergrid_graph_distances.txt

[twitter_gephi]
  file = data/twitter_gephi.txt
  delimiter = ','
  graph_dist_file = data/twitter_gephi_graph_distances.txt


# Metrics defined in "evalmetrics" module
[1n_preservation]
  method = neighborhood_preservation
  args = {'k':1}

[2n_preservation]
  method = neighborhood_preservation
  args = {'k':2}

[glam]
  method = glam_scores
  args = {'glam_path': 'tools/glam/build/glam'}

[stress]
  method = stress
  args = {}

# Embedding methods taking at least "--inputgraph {} --output {} --dimension" as command line arguments
[AROPE]
  command = methods/arope_venv/bin/python methods/arope_main.py
  parameters = "--order 3 --weights [1,0.1,0.01]"

[AROPE_tSNE]
  command = methods/arope_venv/bin/python methods/arope_main.py
  parameters = "--order 3 --weights [1,0.1,0.01]"
  type = ne
  use_tsne = True
  emb_dimension = 10

[CNE]
  command = python methods/cne/src/main.py --delimiter ','
  parameters = "--learning_rate 0.05 --prior uniform --ftol 1e-3 --epochs 1000"

[CNE_DEGREE]
  command = python methods/cne/src/main.py --delimiter ','
  parameters = "--learning_rate 0.05 --prior degree --epochs 1000"

[CNE_tSNE]
  command = python methods/cne/src/main.py --delimiter ','
  parameters = "--learning_rate 0.05 --prior uniform --ftol 1e-3 --epochs 1000"
  use_tsne = True
  emb_dimension = 16

[DEEPWALK]
  command = methods/deepwalk_venv/bin/python methods/deepwalk_main.py --delimiter ','
  parameters = "--number-walks 80 --walk-length 40 --window-size 10 --workers 4"

[DEEPWALK_tSNE]
  command = methods/deepwalk_venv/bin/python methods/deepwalk_main.py --delimiter ','
  parameters = "--workers 4"
  use_tsne = True
  emb_dimension = 128

[FR]
  command = python methods/fruchterman_reingold.py --delimiter ','
  parameters = "--mode networkx --epochs 1000"

[FR_RTX]
  command = python methods/fruchterman_reingold.py --exec methods/frrtx/build/gd --delimiter ','
  parameters = "--mode rtx --epochs 10000"

[GCN_AE]
  command = methods/gae_venv/bin/python methods/gae_main.py
  parameters = ""

[GCN_AE_tSNE]
  command = methods/gae_venv/bin/python methods/gae_main.py
  parameters = ""
  use_tsne = True
  emb_dimension = 16

[DRGRAPH]
  command = python methods/drgraph.py --exec methods/drgraph/Vis
  parameters = "--gamma 0.1 --neg_samples 5 --epochs 400 --A 2 --B 1"
