[SETUP]
  output = ./output
  # possible datasets: karate can_96 netscience powergrid facebook twitter_gephi
  datasets = karate
  # AROPE AROPE_tSNE CNE CNE_DEGREE CNE_tSNE DEEPWALK DEEPWALK_tSNE FR FR_RTX GCN_AE GCN_AE_tSNE DRGRAPH
  methods = AROPE AROPE_tSNE CNE CNE_DEGREE CNE_tSNE DEEPWALK DEEPWALK_tSNE FR FR_RTX GCN_AE GCN_AE_tSNE DRGRAPH
  repetitions = 1
  dimensions = 2
  # 'tn', 'fp', 'fn', 'tp', 'auroc', 'precision', 'recall', 'fallout', 'miss', 'accuracy', 'f_score', 'eval_time' or 'edge_embed_method'
  metrics = auroc precision recall tn fp fn tp accuracy eval_time edge_embed_method
  edge_embed_methods = hadamard weighted_l1 weighted_l2 average
  # e.g. random_prediction common_neighbours jaccard_coefficient
  baselines = 

  # To use the same precomputed train/test splits for every method
  #load_traintest_split = output/evalne_splits/ 


# Datasets
[karate]
  file = data/karate.txt
  delimiter = ','

[can_96]
  file = data/can_96.txt
  delimiter = ','

[netscience]
  file = data/netscience.txt
  delimiter = ','

[facebook]
  file = data/facebook.txt
  delimiter = ','

[powergrid]
  file = data/powergrid.txt
  delimiter = ','

[twitter_gephi]
  file = data/twitter_gephi.txt
  delimiter = ','


# Embedding methods
[AROPE]
  command = methods/arope_venv/bin/python methods/arope_main.py --inputgraph {} --output None --tr_e {} --te_e {} --tr_pred {} --te_pred {} --dimension {}
  parameters = "--order 3 --weights [1,0.1,0.01]"
  type = e2e

[AROPE_tSNE]
  command = methods/arope_venv/bin/python methods/arope_main.py --inputgraph {} --output {} --dimension {}
  parameters = "--order 3 --weights [1,0.1,0.01]"
  type = ne
  use_tsne = True
  emb_dimension = 10

[CNE]
  command = python methods/cne/src/main.py --inputgraph {} --tr_e {} --te_e {} --tr_pred {} --te_pred {} --dimension {} --output None --delimiter ','
  parameters = "--learning_rate 0.05 --prior uniform --epochs 1000"
  type = e2e

[CNE_tSNE]
  command = python methods/cne/src/main.py --inputgraph {} --output {} --dimension {} --delimiter ','
  parameters = "--learning_rate 0.05 --prior uniform --ftol 1e-3 --epochs 1000"
  type = ne
  use_tsne = True
  emb_dimension = 16

[CNE_DEGREE]
  command = python methods/cne/src/main.py --output None --delimiter ',' --inputgraph {} --tr_e {} --te_e {} --tr_pred {} --te_pred {} --dimension {} 
  parameters = "--learning_rate 0.05 --prior degree --pred_prior uniform --epochs 1000"
  type = e2e

[DEEPWALK]
  command = methods/deepwalk_venv/bin/python methods/deepwalk_main.py --inputgraph {} --output {} --dimension {} --delimiter ','
  parameters = "--workers 4"
  type = ne

[DEEPWALK_tSNE]
  command = methods/deepwalk_venv/bin/python methods/deepwalk_main.py --inputgraph {} --output {} --dimension {} --delimiter ','
  parameters = "--workers 4 "
  type = ne
  use_tsne = True
  emb_dimension = 128

[FR]
  command = python methods/fruchterman_reingold.py --inputgraph {} --output {} --dimension {} --delimiter ','
  parameters = "--mode networkx --epochs 1000"
  type = ne

[FR_RTX]
  command = python methods/fruchterman_reingold.py --exec methods/frrtx/build/gd --inputgraph {} --output {} --dimension {} --delimiter ','
  parameters = "--mode rtx --epochs 10000"
  type = ne

[GCN_AE]
  command = methods/gae_venv/bin/python methods/gae_main.py --inputgraph {} --output None --tr_e {} --te_e {} --tr_pred {} --te_pred {} --dimension {}
  parameters = ""
  type = e2e

[GCN_AE_tSNE]
  command = methods/gae_venv/bin/python methods/gae_main.py --inputgraph {} --output {} --dimension {}
  parameters = ""
  type = ne
  use_tsne = True
  emb_dimension = 16

[DRGRAPH]
  command = python methods/drgraph.py --exec methods/drgraph/Vis --inputgraph {} --output {} --dimension {}
  parameters = "--gamma 0.1 --neg_samples 5 --epochs 400 --A 2 --B 1"
  type = ne